{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asterixco - Juan\\\\Documents\\\\meuapp-alunos\\\\src\\\\components\\\\Alunos.js\";\nimport React, { useState } from 'react';\nimport { Table, Button, Form, Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Alunos extends React.Component {\n  constructor(props) {\n    super(props);\n    // Inicialização do estado do componente\n    this.handleChange = event => {\n      // Manipula o evento de mudança em campos de entrada e atualiza o estado correspondente\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleShow = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n    this.handleClose = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n    this.adicionarAluno = () => {\n      // Função para adicionar ou editar um aluno\n      const {\n        nome,\n        email,\n        editando,\n        alunoEditandoId\n      } = this.state;\n      if (nome && email && this.validarEmail(email)) {\n        // Verifica se o nome e o email são válidos e se o email está no formato correto\n        const novoAluno = {\n          id: Date.now(),\n          // Gera um ID único baseado no timestamp\n          nome: nome,\n          email: email\n        };\n        let alunosAtualizados = [...this.state.alunos];\n        if (editando) {\n          // Se estiver no modo de edição, substitui o aluno existente com o novo aluno\n          const alunoEditandoIndex = alunosAtualizados.findIndex(aluno => aluno.id === alunoEditandoId);\n          alunosAtualizados[alunoEditandoIndex] = novoAluno;\n        } else {\n          // Caso contrário, adiciona o novo aluno ao array de alunos\n          alunosAtualizados.push(novoAluno);\n        }\n\n        // Atualiza o estado, limpando os campos e o modo de edição\n        this.setState({\n          alunos: alunosAtualizados,\n          nome: '',\n          email: '',\n          editando: false,\n          alunoEditandoId: null\n        });\n\n        // Fecha o modal\n        this.handleClose();\n      }\n    };\n    this.editarAluno = id => {\n      // Função para entrar no modo de edição de um aluno\n      const alunoEditando = this.state.alunos.find(aluno => aluno.id === id);\n      if (alunoEditando) {\n        // Se o aluno existe, atualiza o estado com o nome, email e informações de edição\n        this.setState({\n          nome: alunoEditando.nome,\n          email: alunoEditando.email,\n          editando: true,\n          alunoEditandoId: id\n        });\n\n        // Abre o modal\n        this.handleShow();\n      }\n    };\n    this.excluirAluno = id => {\n      // Função para excluir um aluno\n      const novosAlunos = this.state.alunos.filter(aluno => aluno.id !== id);\n\n      // Atualiza o estado\n      this.setState({\n        alunos: novosAlunos\n      });\n    };\n    this.validarEmail = email => {\n      // Função para validar o formato de um email usando expressão regular\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(email);\n    };\n    this.state = {\n      alunos: [],\n      // Array vazio para armazenar os alunos\n      nome: '',\n      // Nome do aluno sendo adicionado ou editado\n      email: '',\n      // Email do aluno sendo adicionado ou editado\n      editando: false,\n      // Indica se o formulário está no modo de edição ou adição\n      alunoEditandoId: null,\n      // ID do aluno sendo editado\n      showModal: false // Controla a exibição do modal\n    };\n  }\n\n  componentDidMount() {\n    // Chamado após o componente ser montado no DOM\n    // Verifica se há dados de alunos no localStorage e atualiza o estado\n    const alunosData = localStorage.getItem('alunos');\n    if (alunosData) {\n      this.setState({\n        alunos: JSON.parse(alunosData)\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Chamado sempre que o estado do componente é atualizado\n    // Salva os dados de alunos no localStorage\n    if (prevState.alunos !== this.state.alunos) {\n      localStorage.setItem('alunos', JSON.stringify(this.state.alunos));\n    }\n  }\n  render() {\n    const {\n      nome,\n      email,\n      alunos,\n      editando,\n      showModal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: this.handleShow,\n        children: \"Adicionar Aluno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showModal,\n        onHide: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: editando ? 'Editar Aluno' : 'Adicionar Aluno'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"nome\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"nome\",\n              value: nome,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: this.handleClose,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.adicionarAluno,\n            children: editando ? 'Editar' : 'Adicionar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: alunos.map(aluno => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluno.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluno.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => this.editarAluno(aluno.id),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => this.excluirAluno(aluno.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, aluno.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Alunos;","map":{"version":3,"names":["React","useState","Table","Button","Form","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Alunos","Component","constructor","props","handleChange","event","setState","target","name","value","handleShow","showModal","handleClose","adicionarAluno","nome","email","editando","alunoEditandoId","state","validarEmail","novoAluno","id","Date","now","alunosAtualizados","alunos","alunoEditandoIndex","findIndex","aluno","push","editarAluno","alunoEditando","find","excluirAluno","novosAlunos","filter","emailRegex","test","componentDidMount","alunosData","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","prevState","setItem","stringify","render","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","onChange","Footer","striped","bordered","hover","map"],"sources":["C:/Users/Asterixco - Juan/Documents/meuapp-alunos/src/components/Alunos.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Button, Form, Modal } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Alunos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Inicialização do estado do componente\r\n    this.state = {\r\n      alunos: [], // Array vazio para armazenar os alunos\r\n      nome: '', // Nome do aluno sendo adicionado ou editado\r\n      email: '', // Email do aluno sendo adicionado ou editado\r\n      editando: false, // Indica se o formulário está no modo de edição ou adição\r\n      alunoEditandoId: null, // ID do aluno sendo editado\r\n      showModal: false, // Controla a exibição do modal\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Chamado após o componente ser montado no DOM\r\n    // Verifica se há dados de alunos no localStorage e atualiza o estado\r\n    const alunosData = localStorage.getItem('alunos');\r\n\r\n    if (alunosData) {\r\n      this.setState({ alunos: JSON.parse(alunosData) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Chamado sempre que o estado do componente é atualizado\r\n    // Salva os dados de alunos no localStorage\r\n    if (prevState.alunos !== this.state.alunos) {\r\n      localStorage.setItem('alunos', JSON.stringify(this.state.alunos));\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    // Manipula o evento de mudança em campos de entrada e atualiza o estado correspondente\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ showModal: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  adicionarAluno = () => {\r\n    // Função para adicionar ou editar um aluno\r\n    const { nome, email, editando, alunoEditandoId } = this.state;\r\n\r\n    if (nome && email && this.validarEmail(email)) {\r\n      // Verifica se o nome e o email são válidos e se o email está no formato correto\r\n      const novoAluno = {\r\n        id: Date.now(), // Gera um ID único baseado no timestamp\r\n        nome: nome,\r\n        email: email,\r\n      };\r\n\r\n      let alunosAtualizados = [...this.state.alunos];\r\n      if (editando) {\r\n        // Se estiver no modo de edição, substitui o aluno existente com o novo aluno\r\n        const alunoEditandoIndex = alunosAtualizados.findIndex(aluno => aluno.id === alunoEditandoId);\r\n        alunosAtualizados[alunoEditandoIndex] = novoAluno;\r\n      } else {\r\n        // Caso contrário, adiciona o novo aluno ao array de alunos\r\n        alunosAtualizados.push(novoAluno);\r\n      }\r\n\r\n      // Atualiza o estado, limpando os campos e o modo de edição\r\n      this.setState({ alunos: alunosAtualizados, nome: '', email: '', editando: false, alunoEditandoId: null });\r\n\r\n      // Fecha o modal\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  editarAluno = (id) => {\r\n    // Função para entrar no modo de edição de um aluno\r\n    const alunoEditando = this.state.alunos.find(aluno => aluno.id === id);\r\n    if (alunoEditando) {\r\n      // Se o aluno existe, atualiza o estado com o nome, email e informações de edição\r\n      this.setState({ nome: alunoEditando.nome, email: alunoEditando.email, editando: true, alunoEditandoId: id });\r\n\r\n      // Abre o modal\r\n      this.handleShow();\r\n    }\r\n  };\r\n\r\n  excluirAluno = (id) => {\r\n    // Função para excluir um aluno\r\n    const novosAlunos = this.state.alunos.filter(aluno => aluno.id !== id);\r\n\r\n    // Atualiza o estado\r\n    this.setState({ alunos: novosAlunos });\r\n  };\r\n\r\n  validarEmail = (email) => {\r\n    // Função para validar o formato de um email usando expressão regular\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  render() {\r\n    const { nome, email, alunos, editando, showModal } = this.state;\r\n\r\n    return (\r\n      <><br></br>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Adicionar Aluno\r\n        </Button>\r\n        \r\n\r\n        <Modal show={showModal} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{editando ? 'Editar Aluno' : 'Adicionar Aluno'}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"nome\">\r\n              <Form.Label>Nome</Form.Label>\r\n              <Form.Control type=\"text\" name=\"nome\" value={nome} onChange={this.handleChange} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" name=\"email\" value={email} onChange={this.handleChange} />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Fechar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.adicionarAluno}>\r\n              {editando ? 'Editar' : 'Adicionar'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Table striped bordered hover>\r\n          \r\n          <thead>\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>Email</th>\r\n              <th>Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {alunos.map(aluno => (\r\n              <tr key={aluno.id}>\r\n                <td>{aluno.nome}</td>\r\n                <td>{aluno.email}</td>\r\n                <td>\r\n                  <Button variant=\"primary\" onClick={() => this.editarAluno(aluno.id)}>Editar</Button>{' '}\r\n                  <Button variant=\"danger\" onClick={() => this.excluirAluno(aluno.id)}>Excluir</Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alunos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}