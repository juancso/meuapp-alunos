{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asterixco - Juan\\\\Documents\\\\meuapp-alunos\\\\src\\\\components\\\\Sobre.js\";\nimport React from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Alunos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      // Função para atualizar o estado com os valores digitados nos campos de nome e email\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.adicionarAluno = () => {\n      // Função para adicionar um novo aluno ao estado e armazenar no localStorage\n      const {\n        nome,\n        email\n      } = this.state;\n      if (nome && email) {\n        // Verifica se o nome e o email foram preenchidos\n        const novoAluno = {\n          id: Date.now(),\n          // Gera um ID único para o novo aluno\n          nome: nome,\n          email: email\n        };\n        const alunosAtualizados = [...this.state.alunos, novoAluno];\n\n        // Atualiza o estado com os novos alunos e limpa os campos de nome e email\n        this.setState({\n          alunos: alunosAtualizados,\n          nome: '',\n          email: ''\n        }, () => {\n          // Armazena os alunos atualizados no localStorage como uma string JSON\n          localStorage.setItem('alunos', JSON.stringify(alunosAtualizados));\n        });\n      }\n    };\n    this.excluirAluno = id => {\n      // Função para excluir um aluno com base no ID e atualizar o estado e o localStorage\n      const novosAlunos = this.state.alunos.filter(aluno => aluno.id !== id);\n\n      // Atualiza o estado com a lista de alunos atualizada\n      this.setState({\n        alunos: novosAlunos\n      }, () => {\n        // Armazena os alunos atualizados no localStorage como uma string JSON\n        localStorage.setItem('alunos', JSON.stringify(novosAlunos));\n      });\n    };\n    this.state = {\n      alunos: [],\n      // Array que armazenará os alunos\n      nome: '',\n      // Valor do campo de nome do aluno\n      email: '' // Valor do campo de email do aluno\n    };\n  }\n\n  componentDidMount() {\n    // Quando o componente é montado, verifica se há dados de alunos no localStorage\n    const alunosData = localStorage.getItem('alunos');\n    if (alunosData) {\n      // Se houver dados de alunos, atualiza o estado com esses dados\n      this.setState({\n        alunos: JSON.parse(alunosData)\n      });\n    }\n  }\n  render() {\n    const {\n      nome,\n      email,\n      alunos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Alunos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nome\",\n          placeholder: \"Nome\",\n          value: nome,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.adicionarAluno,\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: alunos.map(aluno => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluno.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluno.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => this.excluirAluno(aluno.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, aluno.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Alunos;","map":{"version":3,"names":["React","Table","Button","jsxDEV","_jsxDEV","Alunos","Component","constructor","props","handleChange","event","setState","target","name","value","adicionarAluno","nome","email","state","novoAluno","id","Date","now","alunosAtualizados","alunos","localStorage","setItem","JSON","stringify","excluirAluno","novosAlunos","filter","aluno","componentDidMount","alunosData","getItem","parse","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","striped","bordered","hover","map","variant"],"sources":["C:/Users/Asterixco - Juan/Documents/meuapp-alunos/src/components/Sobre.js"],"sourcesContent":["import React from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Alunos extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            alunos: [], // Array que armazenará os alunos\r\n            nome: '', // Valor do campo de nome do aluno\r\n            email: '' // Valor do campo de email do aluno\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Quando o componente é montado, verifica se há dados de alunos no localStorage\r\n        const alunosData = localStorage.getItem('alunos');\r\n\r\n        if (alunosData) {\r\n            // Se houver dados de alunos, atualiza o estado com esses dados\r\n            this.setState({ alunos: JSON.parse(alunosData) });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        // Função para atualizar o estado com os valores digitados nos campos de nome e email\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    adicionarAluno = () => {\r\n        // Função para adicionar um novo aluno ao estado e armazenar no localStorage\r\n        const { nome, email } = this.state;\r\n\r\n        if (nome && email) {\r\n            // Verifica se o nome e o email foram preenchidos\r\n            const novoAluno = {\r\n                id: Date.now(), // Gera um ID único para o novo aluno\r\n                nome: nome,\r\n                email: email\r\n            };\r\n\r\n            const alunosAtualizados = [...this.state.alunos, novoAluno];\r\n\r\n            // Atualiza o estado com os novos alunos e limpa os campos de nome e email\r\n            this.setState({ alunos: alunosAtualizados, nome: '', email: '' }, () => {\r\n                // Armazena os alunos atualizados no localStorage como uma string JSON\r\n                localStorage.setItem('alunos', JSON.stringify(alunosAtualizados));\r\n            });\r\n        }\r\n    }\r\n\r\n    excluirAluno = (id) => {\r\n        // Função para excluir um aluno com base no ID e atualizar o estado e o localStorage\r\n        const novosAlunos = this.state.alunos.filter(aluno => aluno.id !== id);\r\n\r\n        // Atualiza o estado com a lista de alunos atualizada\r\n        this.setState({ alunos: novosAlunos }, () => {\r\n            // Armazena os alunos atualizados no localStorage como uma string JSON\r\n            localStorage.setItem('alunos', JSON.stringify(novosAlunos));\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { nome, email, alunos } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Alunos</h1>\r\n                <div>\r\n                    {/* Campos de entrada para nome e email */}\r\n                    <input type=\"text\" name=\"nome\" placeholder=\"Nome\" value={nome} onChange={this.handleChange} />\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={this.handleChange} />\r\n                    {/* Botão para adicionar um novo aluno */}\r\n                    <button onClick={this.adicionarAluno}>Adicionar</button>\r\n                </div>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            {/* Cabeçalhos da tabela */}\r\n                            <th>Nome</th>\r\n                            <th>Email</th>\r\n                            <th>Ações</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* Mapeia a lista de alunos para renderizar as linhas da tabela */}\r\n                        {alunos.map(aluno => (\r\n                            <tr key={aluno.id}>\r\n                                {/* Exibe o nome e o email do aluno */}\r\n                                <td>{aluno.nome}</td>\r\n                                <td>{aluno.email}</td>\r\n                                <td>\r\n                                    {/* Botão para excluir um aluno */}\r\n                                    <Button variant=\"danger\" onClick={() => this.excluirAluno(aluno.id)}>Excluir</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Alunos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}